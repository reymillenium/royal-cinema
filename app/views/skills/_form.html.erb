<%
  contact_model = Contact
  contact = local_assigns.fetch(:contact, Contact.new)
  return_to = local_assigns.fetch(:return_to, request.fullpath)
%>

<div class="card-body">
  <%= form_with(model: contact, local: true) do |form| %>
    <%= hidden_field_tag :return_to, return_to %>
    <div class="form-group">
      <%= form.label :name, humanize_attribute(contact_model, :name), class: 'small mb-1' %>
      <%= form.text_field :title, class: 'form-control py-4', autofocus: true, autocomplete: "title", placeholder: 'Enter the name' %>
    </div>

    <div class="form-group">
      <%= form.label :body, humanize_attribute(contact_model, :message), class: "small mb-1" %>
      <%#= form.rich_text_area :body, class: "form-control py-4", autofocus: true, disabled: false %>
      <%= form.text_area :message, class: "form-control py-4", autofocus: true, disabled: false %>
    </div>

    <div class="form-group d-flex align-items-center justify-content-between mt-4 mb-0">
      <div class="actions">
        <%= form.submit (contact.persisted? ? t('actions.save') : t('actions.create_and_continue')), name: "save", class: "btn btn-primary btn-sm", data: { disable_with: (contact.persisted? ? t('actions.saving.long') : t('actions.creating.long')) } %>
      </div>
    </div>
  <% end %>
</div>


<script type="text/javascript" charset="utf-8">
  // Prevent from adding attachments into the Trix Editor:
    document.addEventListener("trix-file-accept", function (event) {
        event.preventDefault();
    });
</script>